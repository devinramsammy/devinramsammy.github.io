{"version":3,"sources":["components/Card.js","components/BarChart.js","components/CaptionBar.jsx","components/LineChart.js","components/Map.js","components/NavigationBar.jsx","App.js","reportWebVitals.js","assets/BLM.otf","index.js"],"names":["DataCard","data","style","marginLeft","marginRight","alignItems","Container","Row","map","element","index","Col","xs","bottom","Card","className","Body","Title","name","Text","blurb","undefined","source1","Button","variant","href","url","source2","Chart","bar","dataKey","BarChart","width","height","margin","top","right","left","CartesianGrid","strokeDasharray","XAxis","stroke","YAxis","Tooltip","Legend","Bar","fill","CaptionBar","names","ele","age","text","length","visibility","speed","SimpleLine","LineChart","Line","type","strokeWidth","Map","props","cleanData","database","white","filter","race","black","asian","native_american","other","hispanic","results","young_adult","push","Math","round","newYorkStats","newYork","state","killed","lineChart","White","Black","Hispanic","Other","x","parseInt","date","substring","svg","React","createRef","dict","Set","array","loading","d3","then","us","current","attr","on","states","transition","duration","call","zoom","transform","node","invert","projection","translate","path","g","append","selectAll","topojson","objects","features","enter","event","d","bounds","x0","y0","x1","y1","stopPropagation","scale","min","max","datum","a","b","handleMouseOver","i","has","metadata","temp","add","arr","shift","setState","lat","lon","feature","geometry","coordinates","sources","longitude","latitude","scaleExtent","active","this","spinner","minHeight","clear","display","ref","sm","md","Component","NavigationBar","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.670296ce.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card, Container, Row, Col, Button } from \"react-bootstrap\";\nimport Fade from \"react-reveal/Fade\";\n\nexport default function DataCard({ data }) {\n  return (\n    <div\n      style={{ marginLeft: \"auto\", marginRight: \"auto\", alignItems: \"center\" }}\n    >\n      <Container>\n        <Row>\n          {data.map((element, index) => {\n            return (\n              <Col xs={4}>\n                <Fade bottom>\n                  <Card className=\"card\">\n                    <Card.Body>\n                      <Card.Title>\n                        <center>{element.name}</center>\n                      </Card.Title>\n                      <Card.Text>\n                        <center>{element.blurb}</center>\n                      </Card.Text>\n                      <Container>\n                        <Row>\n                          <Col>\n                            {element.source1 !== undefined ? (\n                              <Button\n                                variant=\"primary\"\n                                href={element.source1.url}\n                                className=\"button\"\n                              >\n                                Source 1\n                              </Button>\n                            ) : (\n                              \"\"\n                            )}\n                          </Col>\n                          <Col>\n                            {element.source2 !== undefined ? (\n                              <Button\n                                variant=\"primary\"\n                                href={element.source1.url}\n                                className=\"button\"\n                              >\n                                Source 2\n                              </Button>\n                            ) : (\n                              \"\"\n                            )}\n                          </Col>\n                        </Row>\n                      </Container>\n                    </Card.Body>\n                  </Card>\n                </Fade>\n              </Col>\n            );\n          })}\n        </Row>\n      </Container>\n    </div>\n  );\n}\n","import React, { PureComponent } from \"react\";\nimport {\n  BarChart,\n  Bar,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\n\nexport default function Chart({ data, bar = { dataKey: \"\", name: \"\" } }) {\n  return (\n    <BarChart\n      width={500}\n      height={300}\n      data={data}\n      margin={{\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5,\n      }}\n    >\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"name\" stroke=\"white\" />\n\n      <YAxis stroke=\"white\" />\n      <Tooltip />\n      <Legend />\n      <Bar dataKey={bar.dataKey} fill=\"#455566\" name={bar.name} />\n    </BarChart>\n  );\n}\n","import React, { Component } from \"react\";\nimport \"./CaptionBar.css\";\nimport Ticker from \"react-ticker\";\n\nfunction CaptionBar({ data }) {\n  let names = data.map((ele) => {\n    return \"•     \" + ele.name + \" - \" + ele.age + \"     \";\n  });\n  let text = \"\";\n  data.length === 0\n    ? (text = (\n        <h1 className=\"tickertext\" style={{ visibility: \"hidden\" }}>\n          placeholder\n        </h1>\n      ))\n    : (text = <h1 className=\"tickertext\">{names}</h1>);\n  return (\n    <Ticker className=\"ticker\" height={30} speed={10}>\n      {({ index }) => <>{text}</>}\n    </Ticker>\n  );\n}\n\nexport default CaptionBar;\n","import React, { PureComponent } from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\n\nexport default function SimpleLine({ data }) {\n  return (\n    <LineChart\n      width={500}\n      height={300}\n      data={data}\n      margin={{\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5,\n      }}\n    >\n      <XAxis dataKey=\"name\" stroke=\"white\" />\n      <YAxis stroke=\"white\" />\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <Tooltip />\n      <Legend />\n      <Line\n        type=\"monotone\"\n        dataKey=\"White\"\n        stroke=\"#455566\"\n        strokeWidth=\"3px\"\n      />\n      <Line\n        type=\"monotone\"\n        dataKey=\"Black\"\n        stroke=\"#455566\"\n        strokeWidth=\"3px\"\n      />\n      <Line\n        type=\"monotone\"\n        dataKey=\"Hispanic\"\n        stroke=\"#455566\"\n        strokeWidth=\"3px\"\n      />\n      <Line\n        type=\"monotone\"\n        dataKey=\"Other\"\n        stroke=\"#455566\"\n        strokeWidth=\"3px\"\n      />\n    </LineChart>\n  );\n}\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson\";\nimport DataCard from \"./Card\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport Fade from \"react-reveal/Fade\";\nimport Chart from \"./BarChart\";\nimport CaptionBar from \"./CaptionBar\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { sum } from \"d3\";\nimport SimpleLine from \"./LineChart\";\n\nexport default class Map extends Component {\n  constructor(props) {\n    super(props);\n    this.svg = React.createRef();\n    this.state = {\n      database: [],\n      dict: new Set(),\n      array: [],\n      loading: true,\n    };\n  }\n  async componentDidMount() {\n    d3.json(\"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\").then(\n      (us) => {\n        var width = 750;\n        var height = 750;\n\n        let svg = d3\n          .select(this.svg.current)\n          .attr(\"viewBox\", [0, 0, width, height])\n          .on(\"click\", reset);\n        const projection = d3.geoAlbersUsa().translate([width / 2, height / 2]);\n        const path = d3.geoPath().projection(projection);\n\n        var g = svg.append(\"g\");\n        function reset() {\n          states.transition().style(\"fill\", null);\n          svg\n            .transition()\n            .duration(750)\n            .call(\n              zoom.transform,\n              d3.zoomIdentity,\n              d3.zoomTransform(svg.node()).invert([width / 2, height / 2])\n            );\n        }\n        let states = g\n          .append(\"g\")\n          .attr(\"id\", \"states\")\n          .selectAll(\"path\")\n          .data(topojson.feature(us, us.objects.states).features)\n          .enter()\n          .append(\"path\")\n          .attr(\"cursor\", \"pointer\")\n          .on(\"click\", clicked)\n          .attr(\"d\", path);\n\n        g.append(\"path\")\n          .datum(\n            topojson.mesh(us, us.objects.states, function (a, b) {\n              return a !== b;\n            })\n          )\n          .attr(\"id\", \"state-borders\")\n          .attr(\"d\", path);\n        const handleMouseOver = (d, i) => {\n          if (this.state.dict.has(i.metadata) !== true) {\n            let temp = this.state.dict;\n            temp.add(i.metadata);\n            let arr = this.state.array;\n            if (this.state.array.length === 9) {\n              arr.shift();\n            }\n            this.setState({\n              dict: temp,\n              array: [...arr, i.metadata],\n            });\n          }\n        };\n\n        var data = {\n          type: \"FeatureCollection\",\n          features: [],\n        };\n        d3.json(\n          \"https://immense-oasis-19068.herokuapp.com/https://www.washingtonpost.com/graphics/investigations/police-shootings-database/data/policeshootings_all.json\"\n        ).then((database) => {\n          this.setState({\n            loading: false,\n            database: database,\n          });\n          for (const d of database) {\n            if (d.lat !== null && d.lon !== null) {\n              let feature = {\n                type: \"feature\",\n                geometry: {\n                  type: \"Point\",\n                  coordinates: [d.lat, d.lon],\n                },\n                metadata: {\n                  blurb: d.blurb,\n                  source1: d.sources[0],\n                  source2: d.sources[1],\n                  name: d.name,\n                },\n              };\n\n              let temp = data.features;\n              temp.push(feature);\n              data.features = temp;\n            }\n          }\n          svg\n            .selectAll(\"circle\")\n            .data(data.features)\n            .enter()\n            .append(\"circle\")\n            .attr(\"cx\", function (d) {\n              var longitude = d.geometry.coordinates[1];\n              var latitude = d.geometry.coordinates[0];\n              return projection([longitude, latitude])[0];\n            })\n            .attr(\"cy\", function (d) {\n              var longitude = d.geometry.coordinates[1];\n              var latitude = d.geometry.coordinates[0];\n              return projection([longitude, latitude])[1];\n            })\n            .style(\"fill\", \"black\")\n            .attr(\"r\", 0.5)\n            .on(\"mouseover\", handleMouseOver);\n        });\n        var zoom = d3\n          .zoom()\n          .scaleExtent([1, 50])\n          .on(\"zoom\", function (event) {\n            svg.selectAll(\"circle\").attr(\"transform\", event.transform);\n            g.selectAll(\"path\").attr(\"transform\", event.transform);\n          });\n\n        svg.call(zoom);\n        function clicked(event, d) {\n          const [[x0, y0], [x1, y1]] = path.bounds(d);\n          event.stopPropagation();\n          states.transition().style(\"fill\", null);\n          svg\n            .transition()\n            .duration(750)\n            .call(\n              zoom.transform,\n              d3.zoomIdentity\n                .translate(width / 2, height / 2)\n                .scale(\n                  Math.min(\n                    8,\n                    0.9 / Math.max((x1 - x0) / width, (y1 - y0) / height)\n                  )\n                )\n                .translate(-(x0 + x1) / 2, -(y0 + y1) / 2),\n              d3.pointer(event, svg.node())\n            );\n        }\n      }\n    );\n  }\n  cleanData = (database, age) => {\n    let white = database.filter((ele) => {\n      return ele.race === \"W\";\n    });\n    let black = database.filter((ele) => {\n      return ele.race === \"B\";\n    });\n    let asian = database.filter((ele) => {\n      return ele.race === \"A\";\n    });\n    let native_american = database.filter((ele) => {\n      return ele.race === \"N\";\n    });\n    let other = database.filter((ele) => {\n      return ele.race === \"O\";\n    });\n    let hispanic = database.filter((ele) => {\n      return ele.race === \"H\";\n    });\n\n    let results = [];\n    let young_adult = 0;\n\n    for (const ele of white) {\n      if (ele.age <= age) {\n        young_adult++;\n      }\n    }\n\n    results.push({\n      name: \"White\",\n      young_adult: Math.round(young_adult / 197),\n    });\n    young_adult = 0;\n\n    for (const ele of black) {\n      if (ele.age <= age) {\n        young_adult++;\n      }\n    }\n\n    results.push({\n      name: \"Black\",\n      young_adult: Math.round(young_adult / 42),\n    });\n    young_adult = 0;\n\n    for (const ele of asian) {\n      if (ele.age <= age) {\n        young_adult++;\n      }\n    }\n\n    results.push({\n      name: \"Asian\",\n      young_adult: Math.round(young_adult / 17),\n    });\n    young_adult = 0;\n\n    for (const ele of other) {\n      if (ele.age <= age) {\n        young_adult++;\n      }\n    }\n\n    results.push({\n      name: \"Other\",\n      young_adult: Math.round(young_adult / 49),\n    });\n    young_adult = 0;\n\n    for (const ele of native_american) {\n      if (ele.age <= age) {\n        young_adult++;\n      }\n    }\n\n    results.push({\n      name: \"Native American\",\n      young_adult: Math.round(young_adult / 4.9),\n    });\n    young_adult = 0;\n\n    for (const ele of hispanic) {\n      if (ele.age <= age) {\n        young_adult++;\n      }\n    }\n\n    results.push({\n      name: \"Hispanic\",\n      young_adult: Math.round(young_adult / 39),\n    });\n    young_adult = 0;\n    return results;\n  };\n  newYorkStats = (database) => {\n    let newYork = database.filter((ele) => {\n      return ele.state === \"NY\";\n    });\n    let white = newYork.filter((ele) => {\n      return ele.race === \"W\";\n    });\n    let black = newYork.filter((ele) => {\n      return ele.race === \"B\";\n    });\n    let asian = newYork.filter((ele) => {\n      return ele.race === \"A\";\n    });\n    let native_american = newYork.filter((ele) => {\n      return ele.race === \"N\";\n    });\n    let other = newYork.filter((ele) => {\n      return ele.race === \"O\";\n    });\n    let hispanic = newYork.filter((ele) => {\n      return ele.race === \"H\";\n    });\n\n    let results = [];\n\n    results.push({\n      name: \"White\",\n      killed: white.length,\n    });\n    results.push({\n      name: \"Black\",\n      killed: black.length,\n    });\n    results.push({\n      name: \"Asian\",\n      killed: asian.length,\n    });\n    results.push({\n      name: \"Native American\",\n      killed: native_american.length,\n    });\n    results.push({\n      name: \"Other\",\n      killed: other.length,\n    });\n    results.push({\n      name: \"Hispanic\",\n      killed: hispanic.length,\n    });\n\n    return results;\n  };\n\n  lineChart = (database, age) => {\n    let white = database.filter((ele) => {\n      return ele.race === \"W\";\n    });\n    let black = database.filter((ele) => {\n      return ele.race === \"B\";\n    });\n    let other = database.filter((ele) => {\n      return ele.race === \"O\";\n    });\n    let hispanic = database.filter((ele) => {\n      return ele.race === \"H\";\n    });\n\n    let results = [\n      {\n        name: \"2015\",\n        White: 500,\n        Black: 259,\n        Hispanic: 172,\n        Other: 37,\n      },\n      {\n        name: \"2016\",\n        White: 469,\n        Black: 234,\n        Hispanic: 160,\n        Other: 42,\n      },\n      {\n        name: \"2017\",\n        White: 461,\n        Black: 224,\n        Hispanic: 181,\n        Other: 44,\n      },\n      {\n        name: \"2018\",\n        White: 456,\n        Black: 229,\n        Hispanic: 166,\n        Other: 39,\n      },\n      {\n        name: \"2019\",\n        White: 405,\n        Black: 249,\n        Hispanic: 163,\n        Other: 41,\n      },\n      {\n        name: \"2020\",\n        White: 436,\n        Black: 226,\n        Hispanic: 156,\n        Other: 22,\n      },\n      {\n        name: \"2021\",\n        White: white.filter((x) => {\n          return parseInt(x.date.substring(0, 4)) === 2021;\n        }).length,\n        Black: black.filter((x) => {\n          return parseInt(x.date.substring(0, 4) === 2021);\n        }).length,\n        Hispanic: hispanic.filter((x) => {\n          return parseInt(x.date.substring(0, 4)) === 2021;\n        }).length,\n        Other: other.filter((x) => {\n          return parseInt(x.date.substring(0, 4)) === 2021;\n        }).length,\n      },\n    ];\n    return results;\n  };\n\n  render() {\n    return (\n      <LoadingOverlay\n        active={this.state.loading}\n        spinner\n        text=\"Loading Data...\"\n      >\n        <CaptionBar data={this.state.database}></CaptionBar>\n        <div style={{ minHeight: \"80vh\" }}>\n          <Fade clear>\n            <div>\n              <p className=\"map-caption\">\n                Data points of Police Shootings across the U.S. sourced from{\" \"}\n                <a href=\"https://github.com/washingtonpost/data-police-shootings\">\n                  The Washington Post\n                </a>\n              </p>\n              <p className=\"secondary-caption\">\n                Click or scroll to zoom, and hover over data points to populate\n                the list to find out more.\n              </p>\n              <svg\n                style={{\n                  marginLeft: \"auto\",\n                  marginRight: \"auto\",\n                  display: \"block\",\n                }}\n                width={\"50vw\"}\n                height={\"50vh\"}\n                ref={this.svg}\n              ></svg>\n\n              <br></br>\n              <br></br>\n            </div>\n            <div>\n              <DataCard data={this.state.array} />\n            </div>\n          </Fade>\n        </div>\n        <br></br>\n        <br></br>\n        <br></br>\n        <div className=\"chart-styles\">\n          <Container>\n            <Row>\n              <Col xs={12} sm={12} md={6}>\n                <Fade clear>\n                  <Chart\n                    data={this.cleanData(this.state.database, 25)}\n                    bar={{ dataKey: \"young_adult\", name: \"Young Adults\" }}\n                  ></Chart>\n                  <p className=\"secondary-caption\">\n                    Per 1 Million People, Black and Hispanic young adults (under\n                    the age of 25) are disproportionally killed by the police\n                  </p>\n                </Fade>\n              </Col>\n              <Col xs={12} sm={12} md={6}>\n                <Fade clear>\n                  <Chart\n                    data={this.newYorkStats(this.state.database)}\n                    bar={{ dataKey: \"killed\", name: \"Killed In New York\" }}\n                  ></Chart>\n                  <p className=\"secondary-caption\">\n                    Black and Hispanic members of the community are\n                    disproportionally killed by the police in New York\n                  </p>\n                </Fade>\n              </Col>\n\n              <Col md={3}></Col>\n              <Col xs={12} sm={12} md={6}>\n                <div>\n                  <Fade clear>\n                    <Chart\n                      data={this.cleanData(this.state.database, 18)}\n                      bar={{ dataKey: \"young_adult\", name: \"Minors Killed\" }}\n                    ></Chart>\n                    <p className=\"secondary-caption\">\n                      Per 1 Million People, Black minors are 3x more likely to\n                      be killed and Hispanic minors are 2x more likely to be\n                      killed than their White counterparts\n                    </p>\n                  </Fade>\n                </div>\n              </Col>\n            </Row>\n            <br></br>\n            <Row>\n              <Col md={3}></Col>\n              <Col xs={12} sm={12} md={6}>\n                <div>\n                  <Fade clear>\n                    <SimpleLine\n                      data={this.lineChart(this.state.database)}\n                    ></SimpleLine>\n                    <p className=\"secondary-caption\">\n                      There hasn't been significant change to the amount of\n                      people killed by police per year eventhough many reforms\n                      have been made\n                    </p>\n                  </Fade>\n                </div>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </LoadingOverlay>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n// import Button from 'react-bootstrap/Button';\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nclass NavigationBar extends Component {\n  render() {\n    return (\n      <div>\n        <h1 className=\"header\">Police Shootings Database Analytics</h1>\n      </div>\n    );\n  }\n}\n\nexport default NavigationBar;\n","import \"./App.css\";\n\nimport React from \"react\";\nimport Map from \"./components/Map\";\nimport CaptionBar from \"./components/CaptionBar\";\nimport NavigationBar from \"./components/NavigationBar\";\n\nexport default function App() {\n  return (\n    <>\n      <NavigationBar />\n      <Map />\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/BLM.78d32896.otf\";","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./assets/BLM.otf\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}